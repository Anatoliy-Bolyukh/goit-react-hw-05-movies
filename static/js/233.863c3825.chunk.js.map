{"version":3,"file":"static/js/233.863c3825.chunk.js","mappings":"4TAEMA,EAAU,mCAChBC,IAAAA,SAAAA,QAAyB,+BAElB,IAAMC,EAAW,mCAAG,WAAMC,GAAN,kGAEAF,IAAAA,IAAA,sCAAyCD,GAAW,CACzEI,OAAQ,CACND,KAAAA,KAJmB,uBAEfE,EAFe,EAEfA,KAFe,kBAOhBA,EAAKC,SAPW,sCASvBC,QAAQC,IAAR,MATuB,8DAAH,sDAcXC,EAAW,mCAAG,WAAOC,EAAOP,GAAd,kGAEAF,IAAAA,IAAA,gCACID,EADJ,8CAErB,CACEI,OAAQ,CACNM,MAAOA,EACPP,KAAAA,KAPiB,uBAEfE,EAFe,EAEfA,KAFe,kBAWhBA,GAXgB,sCAavBE,QAAQC,IAAR,MAbuB,8DAAH,wDAkBXG,EAAY,mCAAG,WAAMC,GAAN,kGAEDX,IAAAA,IAAA,iBACXW,EADW,oBACQZ,EADR,oBAFC,uBAEhBK,EAFgB,EAEhBA,KAFgB,kBAKjBA,GALiB,sCAOxBE,QAAQC,IAAR,MAPwB,8DAAH,sDAYZK,EAAY,mCAAG,WAAMD,GAAN,kGAEDX,IAAAA,IAAA,iBAAoBW,EAApB,4BAA+CZ,EAA/C,oBAFC,uBAEhBK,EAFgB,EAEhBA,KAFgB,kBAGjBA,GAHiB,sCAKxBE,QAAQC,IAAR,MALwB,8DAAH,sDAUZM,EAAe,mCAAG,WAAMF,GAAN,kGAEJX,IAAAA,IAAA,iBAAoBW,EAApB,4BAA+CZ,EAA/C,2BAFI,uBAEnBK,EAFmB,EAEnBA,KAFmB,kBAGpBA,GAHoB,sCAK3BE,QAAQC,IAAR,MAL2B,8DAAH,qD,uICzDfO,EAAOC,EAAAA,GAAAA,GAAH,0HASJC,EAAOD,EAAAA,GAAAA,GAAH,4CAMJE,EAAMF,EAAAA,GAAAA,IAAH,qL,SCkBhB,EAjCa,SAAC,GAAmB,IAAjBG,EAAgB,EAAhBA,UAEd,OACE,SAACJ,EAAD,UACGI,EAAUC,KACT,YAA6D,IAA1DC,EAAyD,EAAzDA,UAAWC,EAA8C,EAA9CA,QAASC,EAAqC,EAArCA,KAAMC,EAA+B,EAA/BA,WAAYC,EAAmB,EAAnBA,aACvC,OACE,UAACR,EAAD,YACE,SAACC,EAAD,CACEQ,IAAKD,EAAa,mCAAD,OAAoCA,GAAe,uIACpEE,IAAI,YAEF,yBAAIJ,EAAOC,MACX,uBAAIH,MANCC,EASd,KAIR,ECFD,EAfiB,WACf,OAAkCM,EAAAA,EAAAA,UAAS,IAA3C,eAAOT,EAAP,KAAkBU,EAAlB,KACQjB,GAAYkB,EAAAA,EAAAA,MAAZlB,QAMR,OAJAmB,EAAAA,EAAAA,YAAU,YACRlB,EAAAA,EAAAA,IAAaD,GAASoB,MAAK,SAAA3B,GAAI,OAAIwB,EAAaxB,EAAK4B,KAAtB,GAChC,GAAE,CAACrB,KAGF,+BACM,SAAC,EAAD,CAAMO,UAAYA,KAG3B,C","sources":["MoviesAPI/moviesApi.js","components/Cast/Cast.style.js","components/Cast/Cast.jsx","pages/CastPage.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = '89e6777c776a7c110eb0e0bc258b581b';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nexport const getTrending = async page => {\n  try {\n    const { data } = await axios.get(`/trending/movie/day?api_key=${API_KEY}`, {\n      params: {\n        page,\n      },\n    });\n    return data.results;\n  } catch (error) {\n    console.log(error);\n    throw error;\n  }\n};\n\nexport const searchMovie = async (query, page) => {\n  try {\n    const { data } = await axios.get(\n      `/search/movie?api_key=${API_KEY}&language=en-US&page=1&include_adult=false`,\n      {\n        params: {\n          query: query,\n          page,\n        },\n      }\n    );\n    return data;\n  } catch (error) {\n    console.log(error);\n    throw error;\n  }\n};\n\nexport const movieDetails = async movieId => {\n  try {\n    const { data } = await axios.get(\n      `/movie/${movieId}?api_key=${API_KEY}&language=en-US`\n    );\n    return data;\n  } catch (error) {\n    console.log(error);\n    throw error;\n  }\n};\n\nexport const getMovieCast = async movieId => {\n  try {\n    const { data } = await axios.get(`/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`);\n    return data;\n  } catch (error) {\n    console.log(error);\n    throw error;\n  }\n}\n\nexport const getMovieReviews = async movieId => {\n  try {\n    const { data } = await axios.get(`/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`);\n    return data;\n  } catch (error) {\n    console.log(error);\n    throw error;\n}\n\n}","import styled from 'styled-components';\n\nexport const List = styled.ul`\ndisplay: flex;\njustify-content: center;\ngap: 30px;\nflex-wrap: wrap;\ntext-decoration: none;\n\n`\n\nexport const Item = styled.li`\nlist-style: none\n\n`\n\n\nexport const Img = styled.img`\ndisplay: flex;\ngap: 30px;\nwidth: 300px;\nborder-radius: 5px;\nbox-shadow: rgb(38, 57, 77) 0px 20px 30px -10px;\n\n&:hover{\n    transform: scale(0.9);\n}\n`","import PropTypes from 'prop-types';\nimport { List, Item, Img } from './Cast.style'\nconst Cast = ({ movieCast }) => {\n\n  return (\n    <List>\n      {movieCast.map(\n        ({ character, cast_id, name, popularity, profile_path }) => {\n          return (\n            <Item key={cast_id}>\n              <Img\n                src={profile_path?`https://image.tmdb.org/t/p/w500/${profile_path}`:'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQLE3diE0kppYY-j0N_QnFa48pJrmLl-WTXVVMWYCTWzs9oim8jHofUrCGQ08FW78NEzOs&usqp=CAU'}\n                alt=\"dasfas\"\n                  /> \n                  <p>{name}{ popularity}</p>\n                  <p>{character}</p>\n            </Item>\n          );\n        }\n      )}\n    </List>\n  );\n};\n\nCast.propTypes = {\n  movieCast: PropTypes.arrayOf(PropTypes.shape({\n    character:  PropTypes.string,\n    cast_id: PropTypes.string,\n    name: PropTypes.string,\n    popularity: PropTypes.string,\n    profile_path: PropTypes.string,\n  }))\n}\n\n\nexport default Cast;\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMovieCast } from '../MoviesAPI/moviesApi';\nimport Cast from 'components/Cast/Cast';\n\nconst CastPage = () => {\n  const [movieCast, setMovieCast] = useState([]);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    getMovieCast(movieId).then(data => setMovieCast(data.cast));\n  }, [movieId]);\n    \n  return (\n    <>\n          <Cast movieCast={ movieCast } />\n    </>\n  );\n};\n\nexport default CastPage;\n"],"names":["API_KEY","axios","getTrending","page","params","data","results","console","log","searchMovie","query","movieDetails","movieId","getMovieCast","getMovieReviews","List","styled","Item","Img","movieCast","map","character","cast_id","name","popularity","profile_path","src","alt","useState","setMovieCast","useParams","useEffect","then","cast"],"sourceRoot":""}