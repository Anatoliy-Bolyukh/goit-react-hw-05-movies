{"version":3,"file":"static/js/8.2f9f0615.chunk.js","mappings":"0TAEMA,EAAU,mCAChBC,IAAAA,SAAAA,QAAyB,+BAElB,IAAMC,EAAW,mCAAG,WAAMC,GAAN,kGAEAF,IAAAA,IAAA,sCAAyCD,GAAW,CACzEI,OAAQ,CACND,KAAAA,KAJmB,uBAEfE,EAFe,EAEfA,KAFe,kBAOhBA,EAAKC,SAPW,sCASvBC,QAAQC,IAAR,MATuB,8DAAH,sDAcXC,EAAW,mCAAG,WAAOC,EAAOP,GAAd,kGAEAF,IAAAA,IAAA,gCACID,EADJ,8CAErB,CACEI,OAAQ,CACNM,MAAOA,EACPP,KAAAA,KAPiB,uBAEfE,EAFe,EAEfA,KAFe,kBAWhBA,GAXgB,sCAavBE,QAAQC,IAAR,MAbuB,8DAAH,wDAkBXG,EAAY,mCAAG,WAAMC,GAAN,kGAEDX,IAAAA,IAAA,iBACXW,EADW,oBACQZ,EADR,oBAFC,uBAEhBK,EAFgB,EAEhBA,KAFgB,kBAKjBA,GALiB,sCAOxBE,QAAQC,IAAR,MAPwB,8DAAH,sDAYZK,EAAY,mCAAG,WAAMD,GAAN,kGAEDX,IAAAA,IAAA,iBAAoBW,EAApB,4BAA+CZ,EAA/C,oBAFC,uBAEhBK,EAFgB,EAEhBA,KAFgB,kBAGjBA,GAHiB,sCAKxBE,QAAQC,IAAR,MALwB,8DAAH,sDAUZM,EAAe,mCAAG,WAAMF,GAAN,kGAEJX,IAAAA,IAAA,iBAAoBW,EAApB,4BAA+CZ,EAA/C,2BAFI,uBAEnBK,EAFmB,EAEnBA,KAFmB,kBAGpBA,GAHoB,sCAK3BE,QAAQC,IAAR,MAL2B,8DAAH,qD,0IChC5B,EAzBgB,SAAC,GAAsB,IAApBO,EAAmB,EAAnBA,aACjB,OACE,wBACGA,GACCA,EAAaC,KAAI,YAA0B,IAAvBC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC1B,OACE,2BACE,kCAAUD,MACN,wBACI,SAAC,IAAD,CACJE,UAAW,IACXC,aAAc,mBACdC,aAAc,mBAHV,SAKHH,QAMV,KAGR,ECLD,EAfoB,WAClB,OAAwCI,EAAAA,EAAAA,UAAS,IAAjD,eAAOP,EAAP,KAAqBQ,EAArB,KACQX,GAAYY,EAAAA,EAAAA,MAAZZ,QAMR,OAJAa,EAAAA,EAAAA,YAAU,YACRX,EAAAA,EAAAA,IAAgBF,GAASc,MAAK,SAAArB,GAAI,OAAIkB,EAAgBlB,EAAKC,QAAzB,GACnC,GAAE,CAACM,KAGF,+BACE,SAAC,EAAD,CAASG,aAAcA,KAG5B,C","sources":["MoviesAPI/moviesApi.js","components/Reviews/Reviews.jsx","pages/ReviewsPage.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = '89e6777c776a7c110eb0e0bc258b581b';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nexport const getTrending = async page => {\n  try {\n    const { data } = await axios.get(`/trending/movie/day?api_key=${API_KEY}`, {\n      params: {\n        page,\n      },\n    });\n    return data.results;\n  } catch (error) {\n    console.log(error);\n    throw error;\n  }\n};\n\nexport const searchMovie = async (query, page) => {\n  try {\n    const { data } = await axios.get(\n      `/search/movie?api_key=${API_KEY}&language=en-US&page=1&include_adult=false`,\n      {\n        params: {\n          query: query,\n          page,\n        },\n      }\n    );\n    return data;\n  } catch (error) {\n    console.log(error);\n    throw error;\n  }\n};\n\nexport const movieDetails = async movieId => {\n  try {\n    const { data } = await axios.get(\n      `/movie/${movieId}?api_key=${API_KEY}&language=en-US`\n    );\n    return data;\n  } catch (error) {\n    console.log(error);\n    throw error;\n  }\n};\n\nexport const getMovieCast = async movieId => {\n  try {\n    const { data } = await axios.get(`/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`);\n    return data;\n  } catch (error) {\n    console.log(error);\n    throw error;\n  }\n}\n\nexport const getMovieReviews = async movieId => {\n  try {\n    const { data } = await axios.get(`/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`);\n    return data;\n  } catch (error) {\n    console.log(error);\n    throw error;\n}\n\n}","import ReactReadMoreReadLess from \"react-read-more-read-less\";\n\nconst Reviews = ({ movieReviews }) => {\n  return (\n    <ul>\n      {movieReviews &&\n        movieReviews.map(({ author, content }) => {\n          return (\n            <li>\n              <p>Autor:{author}</p>\n                  <p>\n                      <ReactReadMoreReadLess\n                  charLimit={1000}\n                  readMoreText={'Read more ▼'}\n                  readLessText={'Read less ▲'}\n                >\n                  {content}\n                </ReactReadMoreReadLess>\n                  </p>\n\n            </li>\n          );\n        })}\n    </ul>\n  );\n};\n\nexport default Reviews;\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMovieReviews } from '../MoviesAPI/moviesApi';\nimport Reviews from '../components/Reviews/Reviews';\n\nconst ReviewsPage = () => {\n  const [movieReviews, setMovieReviews] = useState([]);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    getMovieReviews(movieId).then(data => setMovieReviews(data.results));\n  }, [movieId]);\n\n  return (\n    <>\n      <Reviews movieReviews={movieReviews} />\n    </>\n  );\n};\n\nexport default ReviewsPage;\n"],"names":["API_KEY","axios","getTrending","page","params","data","results","console","log","searchMovie","query","movieDetails","movieId","getMovieCast","getMovieReviews","movieReviews","map","author","content","charLimit","readMoreText","readLessText","useState","setMovieReviews","useParams","useEffect","then"],"sourceRoot":""}